var heroApp=angular.module("SmasherApp",["ngResource","ngRoute","ngCookies"]);heroApp.config(function($routeProvider,$httpProvider){$httpProvider.defaults.cache=!1,$httpProvider.defaults.headers.get||($httpProvider.defaults.headers.get={}),$httpProvider.defaults.headers.get["If-Modified-Since"]="0",$routeProvider.when("/",{templateUrl:"partials/home.html",controller:"mainController"}).when("/add",{templateUrl:"partials/admin-add.html",controller:"addController"}).when("/character/:id",{templateUrl:"partials/admin-add.html",controller:"addController"}).when("/delete/:id",{templateUrl:"partials/admin-delete.html",controller:"deleteController"}).when("/login",{templateUrl:"partials/login.html",controller:"loginController"}).when("/register",{templateUrl:"partials/register.html",controller:"registerController"}).otherwise({redirectTo:"/"})}),heroApp.controller("registerController",function($cookies,$scope,$location,$http){$scope.register=function(){$http.post("/api/signUp",{email:$scope.email,password:$scope.password}).success(function(data,status){200===status&&data===!0?($cookies.put("autho","true"),$location.path("/")):$scope.errorMessage=data}).error(function(data){$scope.errorMessage="The account wasn't created due to a server error."})}}),heroApp.controller("loginController",function($cookies,$scope,$rootScope,$location,$http){$scope.pageHeader="LOGIN",$scope.loggedIn=!1;var autho=$cookies.get("autho");"true"===autho?($scope.loggedIn=!0,$scope.pageHeader="LOGOUT"):$scope.loggedIn=!1,$scope.loading=!1,$scope.login=function(){$scope.loading=!0,$http.post("/api/signIn",{username:$scope.username,password:$scope.password}).success(function(data,status){$scope.loading=!1,200===status&&data===!0?($cookies.put("autho","true"),$location.path("/")):$scope.errorMessage=data}).error(function(data){$scope.loading=!1,$scope.errorMessage="The account wasn't created due to a server error."})},$scope.logout=function(){$cookies.put("autho","false"),$http.get("/api/signOut",{}).success(function(data,status){200===status&&data===!0&&$location.path("/")}),$location.path("/")}}),heroApp.controller("mainController",function($http,$cookies,$scope,$resource,$rootScope,$location,characterModel,editChildCharacter){$scope.loggedIn=!1,$scope.loading=!0,$http({method:"GET",url:"/api/checkAuth"}).then(function(response){response.data===!0?($cookies.put("autho","true"),$scope.loggedIn=!0):($cookies.put("autho","false"),$scope.loggedIn=!1)},function(response){});var Characters=$resource("/api");Characters.query(function(characters){$scope.characters=characters,$scope.characterCnt=characters.length,$scope.columnLimit1=Math.floor($scope.characterCnt/3),$scope.characterCnt%3&&$scope.columnLimit1++,$scope.columnLimit2=Math.floor(($scope.characterCnt-$scope.columnLimit1)/2),($scope.characterCnt-$scope.columnLimit1)%2&&$scope.columnLimit2++,$scope.loading=!1}),$scope.character1="",$scope.character2="",$scope.parent1="",$scope.parent2="",$scope.showStats=function(){},$scope.randomBetween=function(lowNumber,highNumber){return Math.floor(Math.random()*(highNumber-lowNumber+1)+lowNumber)},$scope.rankingRange=function(powerType){var powerRange=[1,7];return angular.forEach($scope.parent1.rankings,function(value,key){value.category===powerType&&("true"===value.passable?powerRange[0]=Number(value.level):powerRange[0]=1)}),angular.forEach($scope.parent2.rankings,function(value,key){value.category===powerType&&("true"===value.passable?Number(value.level)<powerRange[0]?(powerRange[1]=powerRange[0],powerRange[0]=Number(value.level)):powerRange[1]=Number(value.level):powerRange[1]=1)}),powerRange},Array.prototype.shuffle=function(){for(var input=this,i=input.length-1;i>=0;i--){var randomIndex=Math.floor(Math.random()*(i+1)),itemAtIndex=input[randomIndex];input[randomIndex]=input[i],input[i]=itemAtIndex}return input},$scope.randomPowers=function(){var allPowers=[],powers={powers:[]};angular.forEach($scope.parent1.powers,function(value,key){"No power"!==value.powerName&&allPowers.push(value.powerName)}),angular.forEach($scope.parent2.powers,function(value,key){"No power"!==value.powerName&&allPowers.push(value.powerName)}),allPowers.shuffle();var childNumberPowers=$scope.randomBetween(1,allPowers.length);allPowers.splice(childNumberPowers,allPowers.length-childNumberPowers);var uniqueNames=[];$.each(allPowers,function(i,el){-1===$.inArray(el,uniqueNames)&&uniqueNames.push(el)});for(var x=0;x<uniqueNames.length;x++)powers.powers[x]={id:x,powerName:uniqueNames[x]};return powers.powers},$scope.createCharacter=function(){var anomoly=Math.floor(1e3*Math.random())+1,intelligenceRange=[1,7],strengthRange=[1,7],speedRange=[1,7],durabilityRange=[1,7],energyRange=[1,7],fightingRange=[1,7];369!==anomoly&&(intelligenceRange=$scope.rankingRange("Intelligence"),strengthRange=$scope.rankingRange("Strength"),speedRange=$scope.rankingRange("Speed"),durabilityRange=$scope.rankingRange("Durability"),energyRange=$scope.rankingRange("Energy Projection"),fightingRange=$scope.rankingRange("Fighting Skills")),$scope.childCharacter=characterModel.character,$scope.childCharacter.name="Unamed Character";var tempAffinity=$scope.randomBetween(1,3);switch(tempAffinity){case 1:$scope.childCharacter.affinity="hero";break;case 2:$scope.childCharacter.affinity="villian";break;case 3:$scope.childCharacter.affinity="anti-hero"}$scope.childCharacter.rankings[0].level=$scope.randomBetween(intelligenceRange[0],intelligenceRange[1]).toString(),$scope.childCharacter.rankings[1].level=$scope.randomBetween(strengthRange[0],strengthRange[1]).toString(),$scope.childCharacter.rankings[2].level=$scope.randomBetween(speedRange[0],speedRange[1]).toString(),$scope.childCharacter.rankings[3].level=$scope.randomBetween(durabilityRange[0],durabilityRange[1]).toString(),$scope.childCharacter.rankings[4].level=$scope.randomBetween(energyRange[0],energyRange[1]).toString(),$scope.childCharacter.rankings[5].level=$scope.randomBetween(fightingRange[0],fightingRange[1]).toString(),$scope.childCharacter.powers=$scope.randomPowers(),$("#myModal").modal("show")},$scope.isSelected=function(id){return id===$scope.character1||id===$scope.character2?!0:void 0},$scope.displayStats="",$scope.showStats=function(id){$scope.displayStats===id?$scope.displayStats="":$scope.displayStats=id},$scope.statsShowed=function(id){return id===$scope.displayStats?!0:void 0},$scope.hideStats=function(id){return!0},$scope.combine=function(id){if(id===$scope.character1)return void($scope.character1="");if(id===$scope.character2)return void($scope.character2="");if(0===$scope.character1.length?$scope.character1=id:$scope.character2=id,$scope.character1.length>0&&$scope.character2.length>0){var Parent1=$resource("/api/edit/:id",{id:"@_id"},{get:{method:"GET"}});Parent1.get({id:$scope.character1},function(character){$scope.parent1=character;var Parent2=$resource("/api/edit/:id",{id:"@_id"},{get:{method:"GET"}});Parent2.get({id:$scope.character2},function(character){$scope.parent2=character,$scope.createCharacter()})})}},$scope.edit=function(){$scope.childCharacter.parents[0].parent=$scope.character1,$scope.childCharacter.parents[1].parent=$scope.character2,editChildCharacter.character=$scope.childCharacter,$location.path("/add")}}),heroApp.controller("deleteController",function($http,$cookies,$scope,$resource,$location,$routeParams){var displayContent=function(){var Characters=$resource("/api/delete/:id");Characters.get({id:$routeParams.id},function(character){$scope.character=character}),$scope["delete"]=function(){Characters["delete"]({id:$routeParams.id},function(character){$location.path("/")})}};$http({method:"GET",url:"/api/checkAuth"}).then(function(response){response.data===!0?($cookies.put("autho","true"),$scope.loggedIn=!0,displayContent()):($cookies.put("autho","false"),$scope.loggedIn=!1,$location.path("/"))},function(response){})}),heroApp.controller("addController",function($http,$cookies,$scope,$resource,$location,$routeParams,characterModel,editChildCharacter){$scope.loggedIn=!1,$scope.loading=!1,$scope.editing="",$scope.editSavedValue="",$scope.edit=function(fieldName,val){$scope.editSavedValue=JSON.stringify(val),$scope.editing=fieldName,"parent1"===fieldName&&$scope.changeParent(1),"parent2"===fieldName&&$scope.changeParent(2)},$scope.isEditing=function(fieldName,mode){return $routeParams.id?$scope.editing===fieldName?!0:!1:"edit"===mode?!1:!0},$scope.saveEditing=function(){$scope.editing=""},$scope.cancelEditing=function(fieldName){switch($scope.editing="",fieldName){case"name":$scope.character.name=JSON.parse($scope.editSavedValue);break;case"affinity":$scope.character.affinity=JSON.parse($scope.editSavedValue);break;case"image":$scope.character.images=[JSON.parse($scope.editSavedValue)];break;case"ranking":$scope.character.rankings=JSON.parse($scope.editSavedValue);break;case"power":$scope.character.powers=JSON.parse($scope.editSavedValue);break;case"trait":$scope.character.traits=JSON.parse($scope.editSavedValue);break;case"bio":$scope.character.biography=JSON.parse($scope.editSavedValue);break;case"parent":$scope.character.parents=JSON.parse($scope.editSavedValue),$scope.character.parents&&$scope.getCharacter($scope.character.parents[0].parent,1),$scope.character.parents&&$scope.getCharacter($scope.character.parents[1].parent,2)}$scope.editSavedValue=""},$scope.getCharacter=function(id,parentNumber){if(id&&id.length>0){var tempCharacter=$resource("/api/edit/:id",{id:"@_id"},{get:{method:"GET"}});tempCharacter.get({id:id},function(character){1===parentNumber?($scope.parent1=character,$scope.character.parents[0].parent=$scope.parent1._id):($scope.parent2=character,$scope.character.parents[1].parent=$scope.parent2._id)})}};var Characters=$resource("/api");Characters.query(function(characters){$scope.characters=characters}),$scope.character={},$scope.parent1={},$scope.parent2={},$scope.notfound=!1;var LoadCharacter,displayForm=function(){$routeParams.id?(LoadCharacter=$resource("/api/edit/:id",{id:"@_id"},{update:{method:"PUT"}}),LoadCharacter.get({id:$routeParams.id},function(character){character._id?($scope.character=character,$scope.character.parents&&$scope.getCharacter($scope.character.parents[0].parent,1),$scope.character.parents&&$scope.getCharacter($scope.character.parents[1].parent,2)):$scope.notfound=!0})):$scope.loggedIn===!0?(editChildCharacter.character.name?$scope.character=editChildCharacter.character:$scope.character=JSON.parse(JSON.stringify(characterModel.character)),$scope.character.parents&&$scope.getCharacter($scope.character.parents[0].parent,1),$scope.character.parents&&$scope.getCharacter($scope.character.parents[1].parent,2)):$location.path("/login")};$http({method:"GET",url:"/api/checkAuth"}).then(function(response){response.data===!0?($cookies.put("autho","true"),$scope.loggedIn=!0):($cookies.put("autho","false"),$scope.loggedIn=!1),displayForm()},function(response){$cookies.put("autho","false"),$scope.loggedIn=!1});var powerCounter=0,traitCounter=0,imageCounter=0;$scope.save=function(){$scope.loading=!0,$routeParams.id?LoadCharacter.update($scope.character,function(){$scope.loading=!1,$location.path("/")}):$http({method:"POST",url:"/api",data:$scope.character}).then(function(response){response.data===!0&&200===response.status?($scope.loading=!1,$location.path("/"),editChildCharacter.character=JSON.parse(JSON.stringify(characterModel.character))):($scope.loading=!1,$scope.errorMessage=response.data)},function(response){$scope.errorMessage="Character not created due to server issue."})},$scope.newPower=function($event){powerCounter++,$scope.character.powers.push({id:powerCounter,powerDesc:""})},$scope.newTrait=function($event){traitCounter++,$scope.character.traits.push({id:traitCounter,trait:""})},$scope.newImage=function($event){imageCounter++,$scope.character.images.push({id:imageCounter,image:""})},$scope.parentChangeNumber=1,$scope.changeParent=function(parentNumber){1===parentNumber?($scope.parentChangeNumber=1,$scope.parentSelection=$scope.character.parents[0].parent):($scope.parentChangeNumber=2,$scope.parentSelection2=$scope.character.parents[1].parent)},$scope.updateParent=function(parentNumber){1===parentNumber?$scope.getCharacter($scope.parentSelection,1):$scope.getCharacter($scope.parentSelection2,2)}}),angular.module("SmasherApp").service("characterModel",function(){this.character={name:"",affinity:"",rankings:[{id:0,category:"Intelligence",origin:"birth",level:"2",passable:"true"},{id:1,category:"Strength",origin:"birth",level:"2",passable:"true"},{id:2,category:"Speed",origin:"birth",level:"2",passable:"true"},{id:3,category:"Durability",origin:"birth",level:"2",passable:"true"},{id:4,category:"Energy Projection",origin:"birth",level:"1",passable:"true"},{id:5,category:"Fighting Skills",origin:"birth",level:"2",passable:"true"}],powers:[{id:0,powerName:""}],traits:[{id:0,trait:""}],biography:"",images:[{image:""}],parents:[{parent:""},{parent:""}]}}),angular.module("SmasherApp").service("editChildCharacter",function(){this.character={name:"",affinity:"",rankings:[{id:0,category:"Intelligence",origin:"birth",level:"2",passable:"true"},{id:1,category:"Strength",origin:"birth",level:"2",passable:"true"},{id:2,category:"Speed",origin:"birth",level:"2",passable:"true"},{id:3,category:"Durability",origin:"birth",level:"2",passable:"true"},{id:4,category:"Energy Projection",origin:"birth",level:"1",passable:"true"},{id:5,category:"Fighting Skills",origin:"birth",level:"2",passable:"true"}],powers:[{id:0,powerName:""}],traits:[{id:0,trait:""}],biography:"",images:[{image:""}],parents:[{parent:""},{parent:""}]}});